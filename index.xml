<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Aaron&#39;s Notes</title>
    <link>https://www.cloudnotes.cc/</link>
    <description>Recent content on Aaron&#39;s Notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>All rights reserved - 2019</copyright>
    <lastBuildDate>Sat, 27 Apr 2019 18:35:16 +0800</lastBuildDate>
    
	<atom:link href="https://www.cloudnotes.cc/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>从哪开始写你的第一篇文章</title>
      <link>https://www.cloudnotes.cc/post/where-to-post/</link>
      <pubDate>Sat, 27 Apr 2019 18:35:16 +0800</pubDate>
      
      <guid>https://www.cloudnotes.cc/post/where-to-post/</guid>
      <description>对我来说，在哪里写下自己平时的一些只言片语，比起写什么，怎么写似乎更加重要，自媒体横行的年代，似乎每个技术人都热衷将自己的工程经验，行业见解对某些社会热点的评论和自己工作方法论搬上网络。目前可供发布个人技术博客的平台或者方法很多，优劣也各有不同，为此我纠结了很久，因为这需要闻到自己写下技术博客的初衷是什么。起初我的想法很简单，打算记录一些平时的读书笔记，部署步骤，代码走读之类零零碎碎的事情，为自己梳理思路的同时也能够让其他看到的人有所收获。就这样写了很多的文章在简书，算是一个比较另类的博客网站，就像网站本身的名字一样，简洁而没有太多花哨的功能，markdown也让创作更为的得心应手，手机的客户端适配也做得方便用户的随时创作，同步和查看，然而简书毕竟不是专为技术博客而做，读者受众有限，创作者本身的识别度在充斥着茫茫热点的条目中显得苍白。
在停止了一段时间的创作之后，试了试微信公众号这个媒体创作平台，公众号最有优势的地方在于借助微信这个平台能实现文章的传播，让身边的家人，朋友，同事第一时间了解，在足够优质的情况下实现病毒式的传播而不用借助于网络爬虫，问题在于微信公众号的推广对于只想写点技术文章的人来说实在是个硬伤，在微信公众号特殊的封闭生态下，你的文章只有在被人关注，被人转发的情况下才能为人所见，如果不刻意推广，你的文章的阅读量很可能不会超过你的微信朋友数量，即使有了专业的推广，你拥有了十万级别的粉丝，发布出来的文章日阅读量十万加，但在一周或一月之后，这些文章就会被放在服务器的深处，偶尔为其他公众号或个人转载，继而销声匿迹，既无法被搜索引擎检索收录（除了自己的搜狗），作为互联网信息的一部分留存为世界其他潜在的读者检索，也无法为自己的IP提供良好的检索和备份。微信内置的浏览器和对应公众号生成的网站地址反web潮流而动，导致跳出微信浏览器，公众号的文章基本没有可以被阅读到的空间。
云计算的火热或者说公有云平台技术的成熟和成本的降低，促使了我个人打算利用云主机建立一个小的网站的想法，技术的使用和内容的编排能得到最大的自由度，同时满足了我对于技术实践的满足感。个人网站有自己定义的域名，自己定义的版面，自己定义底层的硬件设施，一切看上去都很geek，然而问题在于即便有了公有云诸多方便的服务，搭建一个可靠，可扩展，实用且外观还不错的网站不是一个容易的事情，首先它耗时，我用的LAMP搭建了一个简单的服务框架，接下来陆续注册域名，配置DNS，安全防护，web界面调整（从登录界面到编辑器插件），网站备案，CDN…网站出来了，基本服务好了，问题会继续随着访问量的上升，云平台服务的稳定，国内外的垃圾或病毒攻击继续复杂，比如网站相应速度变慢，甚至无法响应（高峰期），其次它耗钱，现在的公有云平台不论是阿里云还是AWS，基本域名+ECS下来一个月平均上百的维护费用，对于只想简单写个东西的朋友来说未免有些太贵，最后它累心，自己日积月累，灵感迸发写的所有文章托管在云主机上，数据的可靠性一直让我隐隐担心，某公有云平台之前出现过若干次企业服务无法访问的情况，无法想象哪天EC2奔溃了，自己辛辛苦苦码出来的文章也随之崩溃，当然你可以做HA，前提是继续花上一大笔钱部署多个EC2，ELB，RDS等。如果多年后你考虑换种方式写文章或者换个平台写文章，文章的导出/导入和迁移也将是一个问题。
相对成本，可控性的权衡，git page+hugo是比较好的方案，针对个人博客多是静态网页，通过git page实现零成本的网页托管，通过hugo实现快速的静态网页编辑编译，两者结合实现了零成本，高可控的个人静态网站搭建，通过hugo的多种主题和git page的cname配置，能够进一步让网页的体验更为人性。唯一麻烦的是每次需要编辑和提交新的文章时，相对的过程稍微显得复杂一些，大概流程类似代码编译和上传：hugo new xx.md&amp;ndash;&amp;gt;修改相应xx.md属性，如title，slug，share&amp;ndash;&amp;gt;markdown文章，如果存在图片的话，需要上传到类似statis/media下并在md中指定相对路径&amp;ndash;&amp;gt;hugo -t &amp;ndash;&amp;gt;cp -r public/* &amp;ndash;&amp;gt;git add/commint/push。
终归来说，在哪里写文章只是为你定了个不一样的出发点，它不会让你能更快的跳到终点，而似乎在技术积累的道路上也没有终点，投入的时间和热爱最终收获成了自己在路上看到的美景，给自己带来满足感和成就感的同时如果能帮到他人那么一点，那就是最美好的事情。</description>
    </item>
    
    <item>
      <title>五分钟笔记-《混合云白皮书》</title>
      <link>https://www.cloudnotes.cc/post/notes-about-hybrid-whitepaper/</link>
      <pubDate>Sat, 27 Apr 2019 18:24:02 +0800</pubDate>
      
      <guid>https://www.cloudnotes.cc/post/notes-about-hybrid-whitepaper/</guid>
      <description>原白皮书链接：https://www.zstack.io/templets/default/pdf/wp.pdf
混合云定义：云与传统IT资源的整合，目前的主流表现形式为公有云+私有云，相对于公有云和私有云有自己的商用平台（AWS）或者开源项目（OpenStack），混合云更像是一种业务部署，迁移，管理的方式，通过VPN/专线将拉通公有云和私有云资源，继承了公有云的资源可伸缩和私有云的安全性。
混合云发展：混合云的发展依赖于公有云和私有云在技术架构，商业模式上的成熟。其中公有云的迅速发展依赖于网络环境的更新换代，技术方案的成熟，行业标准的制定推出，市场上消费的主要客户来源于大量中小型企业推出的互联网应用，比如O2O，B2B/B2C等等。私有云的发展可以参见中国信息通信研究院的2018《中国私有云发展调查报告》，其主要目标在于提升IT运行效率，降低IT运营成本，应用在于企业内部管理系统和办公系统运维始终是私有云展开的痛点，同时安全领域始终是私有云未来重点。
 MarketsandMarkets 预测，到 2021 年，混合云的支出将年均增长 22.5%，达到近 920 亿美元 云计算开源产业联盟 2017 年中国私有云市场规模达到 426.8 亿元，相比 2016 年增长 23.8%。预计 2018-2021 年中国私有云市场仍将保持稳定增长 中国信息通信研究院
 可以看出公有云的发展速度和市场占比都是排在私有云和混合云前列，相对私有云，混合云的体量更大，而且发展速度更快（私有云的体量基本在2016，2017年维持不变）
混合云的优势：公有云无法很好适应企业的IT合规政策，私有云仅仅将原有物理设备虚拟化后进行统一管理，做到了资源的局部最优，但在大的业务场景下无法做到资源的scale in/out，限制了成本的进一步降低。同时在针对内部DevOps方面，混合云的部署方式为企业的新业务上云和原有业务迁移提供了一种过渡的方案。
混合云的商用产品目前提供的功能大同小异，核心都在于将公有云和私有云在IaaS上拉通，举例如下： - AWS（Snowball EDGE，Greengrass） - 阿里云，其中Cloudlink作为专线网络提供 - 华为FusionBridge，个人理解本质是架设在公有云和私有元的上一层管理层，或者类似glue layer来接收用户的需求并转换成对应下层云平台的api调用，比如OpenStack API+AWS API。更多参见https://e.huawei.com/cn/cloud-computing/fusionbridge - 腾讯云的黑石系列，注意到其物理服务器全系采用Intel的skylake或e5系列
混合云的特性：需要拥有统一管理界面，实现多云平台，异构资源的整合，提供良好的服务编排和运维监控，让用户无需感知资源的底层实现而专注在上层的业务开发；白皮书中提出的高密度高效率（多核）和超融合架构，个人认为并非混合云的特性或者优势。多核的需求需要考虑到实际的应用，类似于公有云中的计算性实例，对于计算密集型或实时性要求较高的场景比如AI，自动驾驶，生命科学等，需要多核来实现任务的多并发，配合类似mapreduce的软件充分发挥出其效能，但不能简单对应多核就是高密度高效率，甚至划分成混合云的典型特性。
混合云的关键实现：加密IP网络（IPSec）或者专线，要实现多云平台的融合，首先要实现公有云和私有云两者网络的打通，之前提到的各个主流厂商都有自己的方案，但都依赖当前的运营商网络。白皮书中提到以来云网融合，但具体概念和实施细节并未作出说明，个人理解当前不论是走IP网的VPN还是走专线，都能较好的覆盖不同用户的需求，所提出的不足在当前的应用场景下看并没有实质的瓶颈，随着网络运营商的硬件设施升级，相应带来的带宽，时延，成本的优势会承接上新应用的更高要求。
混合云的发展趋势（直接引用）： &amp;gt; 混合云的发展趋势是进一步屏蔽底层物理细节和实现细节，减少用户的试错成本，帮助用户关注基于跨云的业务实现而不是关注如何部署一个跨云服务，从而真正将私有云的定制能力和公有云的共享及生态能力有机融合 云计算开源产业联盟</description>
    </item>
    
    <item>
      <title>五分钟见解-云计算</title>
      <link>https://www.cloudnotes.cc/post/cloud-computing/</link>
      <pubDate>Sat, 27 Apr 2019 01:07:49 +0800</pubDate>
      
      <guid>https://www.cloudnotes.cc/post/cloud-computing/</guid>
      <description>云计算已经不是什么新鲜事物，最早追溯到2005年由Google，IBM，亚马逊分别基于自己的商务模式提出了云计算的概念，现在业界也有各种的针对自身行业和业务倾向的定义，个人理解，云计算的本质在于：1. 对于个人用户，提供随时随地可获取的访问信息，处理信息和分发信息的能力；2. 对于企业用户，提供概念上容量无限，可伸缩，可管理，可消费的计算，存储，网络资源。
云计算之所以能够在概念提出的十几年后的今天，作为web2.0后继的新一轮技术浪潮，很大程度在于底层网络基础设施在带宽，速度，时延等方面的更新换代（路由系统方面，从08年的10G，到12年的40G/100G，到如今的400G，移动终端方面，从2G-3G-4G一直到如今持续火热的5G），行业标准的提出，演进和商用（如ETSI的NFV）。为上游IT厂商业务发展的创新性，部署的灵活性，落地的可行性（成本，性能，消费需求）提供了巨大的想象空间。
云计算涉及的核心技术包括资源管理，存储，安全等方面，其中资源的管理我们熟悉的就是资源通过Hypervisor的虚拟化，或者说是整体服务器资源的‘池化’（Borg，RSD都是这方面的代表），用户消费的不再是一个个独立的物理主机服务器，而是将CPU，内存，磁盘，带宽等所有资源看作一个整体，通过Console/SDK/API进行消费；存储在云的环境下指的主要是分布式存储系统，通过将网络互联的物理服务器，对外作为一个整体提供数据（非结构化/结构化/半结构化）的存储服务，较早提出的比如Google的分布式文件系统GFS，分布式表格系统Bigtable，都是这方面的代表；安全方面包括了用户的认证鉴权管理，基础设施的安全策略，物理隔离，数据的分类，加解密，传输，恢复等众多技术方面的考量，也是当今用户或企业数据上云最为重要的考虑因素之一。
云计算的兴起对通信和IT产业的影响： 1. 客户端软件（操作系统）和硬件（PC）的作用弱化，由于业务软件的上云，最极端的未来用户只需要一台配置浏览器可以上网的白盒就可以完成绝大部分的个人和企业需求； 2. 硬件厂商（包括芯片厂商，内存厂商，磁盘厂商）业务重心从客户端迁移到数据中心的服务器端。这个比较好理解，个人和企业手中的终端简化或者减少了，另外对云上业务的性能要求提高了，自然导致对应硬件制造上的业务和技术重点会迁移过来； 3. 基于公有云平台或者说SaaS/PaaS的上层业务应用将会进一步发展，可以期望（或者说已成现实）在将来AWS，Azure，阿里云等公有云已经成为类似微软操作系统的一个角色，为众多下游业务提供商提供最为基础的资源平台，进而垄断整个产业的生态链。这个重合了2019阿里云峰会上的一个表态：“我们希望行业的解决方案、实施、复制，交给我们的合作伙伴去做。阿里云只做最擅长的部分——基于技术的创新和突破。”</description>
    </item>
    
    <item>
      <title>tech enthusiast, try to summarize all mess into a tree</title>
      <link>https://www.cloudnotes.cc/about/me/</link>
      <pubDate>Sat, 27 Apr 2019 00:55:10 +0800</pubDate>
      
      <guid>https://www.cloudnotes.cc/about/me/</guid>
      <description></description>
    </item>
    
    <item>
      <title></title>
      <link>https://www.cloudnotes.cc/book/2019-booklist/</link>
      <pubDate>Sat, 27 Apr 2019 00:46:37 +0800</pubDate>
      
      <guid>https://www.cloudnotes.cc/book/2019-booklist/</guid>
      <description> 2019书单（待更新） 技术  软件定义网络 分布式对象存储&amp;ndash;原理，架构及Go语言实现 TensorFlow技术解析与实战 大规模分布式存储系统原理解析与架构实践 人月神话 数据存储与技术实践 PaaS实现与运维管理：基于Mesos +Docker+ELK的实战指南  人文  人类简史 未来简史 浪潮之巅 数学之美  </description>
    </item>
    
    <item>
      <title>五分钟见解-运营商和IT公司的技术栈</title>
      <link>https://www.cloudnotes.cc/post/tech-arch-of-cosp-and-it/</link>
      <pubDate>Fri, 26 Apr 2019 18:27:45 +0800</pubDate>
      
      <guid>https://www.cloudnotes.cc/post/tech-arch-of-cosp-and-it/</guid>
      <description>运营商从过去到现在，承担基础设施并为上层应用提供数据管道，其基本业务仍聚焦在通信行业，比如终端用户的通信费用，企业用户的租赁费用等，CPU等资源虚拟化的兴起让运营商通过白盒（COTS）实现原有业务，扩容新增业务，更新业务架构等在技术上得以实现，从而降低了以往采购路由器，服务器以及周边配件的费用（CAPEX），也降低了前期业务部署，扩容，运维等一系列的人员开销和部署难度（OPEX），缩短了业务的上线时间，提高了整体基础设施的鲁棒性。技术栈来看，除了不断演进的基础的IGP/BGP协议，MPLS/IPSec隧道协议，L4-L7层应用层协议，还有ETSI划定的一系列NFV标准，定义了MANO/VNF/NFVi为基础的软件架构，接口标准（Restful）以及对接OSS/BSS的逻辑。我们看到ONAP为代表的Orchestrator，vGW/vFW等的VNF应用，底层NFVi的开源（OpenStack）或商用项目，运营商的原业务迁移，新业务上云和新市场扩展有了一个相对清晰方向。SDN则提供了集中式控制平面，底层相关的转发协议（Openflow），实现了传统L2/L3层的数据业务打通。
大的IT厂商利用现有的基础设施，为自身以及其他企业，个人用户提供PaaS/SaaS服务（还记得OTT吗），这里我狭义指的就是公有云/混合云，在这个大的背景下的技术栈更多的体现在云计算，云存储，分布式系统（K-V，存储等），容器，横向的web前端数据库后端的解决方案，垂直行业的业务划分和技术实现等，在上述的零零总总的大方向上引申出来更多背后的技术体系，云计算方面包括基础如KVM/QEMU/Virt-IO/vhost，消息中间件如kafka，rabbitMQ，系统调优如CPU绑定隔离/NUMA亲和/Cache管理等；云存储方面包括存储协议如iSCSI，NVMe，RDMA，端到端硬件如x86/ARM，存储级内存（DCPMM），SATA，SSD，SmartNIC，分布式系统如Ceph，Redis/Memcached，数据库SQL/NoSQL（DynamoDB）等，容器方面包括应用场景上的微服务，支持技术的docker/K8S/Rancher以及数量众多的开源项目。
5G的到来为上层的应用提供了诸多遐想的空间，AI/IoT/BigData等技术领域，医疗/自动驾驶/零售等垂直行业都是未来IT厂商可以期待的新的利润点，但对于通信运营商来说，如何实现自己的业务转型和开拓新的市场是一个需要解决的的问题。
下面列出个人整理的云计算和云存储的技术框架： </description>
    </item>
    
    <item>
      <title>五分钟笔记-《边缘云计算技术及标准化白皮书》</title>
      <link>https://www.cloudnotes.cc/post/notes-about-mec-whitepaper/</link>
      <pubDate>Wed, 24 Apr 2019 01:21:39 +0800</pubDate>
      
      <guid>https://www.cloudnotes.cc/post/notes-about-mec-whitepaper/</guid>
      <description>原白皮书链接： www.cesi.cn/images/editor/20181214/20181214115429307.pdf
文章给出的边缘云的定义如下：
 边缘云计算定义为： 边缘云计算， 简称边缘云，是基于云计算技术的核心和边缘计算的能力，构筑在边缘基础设施之上的云计算平台。形成边缘位置的计算、网络、存储、安全等能力全面的弹性云平台，并与中心云和物联网终端形成“云边端三体协同” 的端到端的技术架构，通过将网络转发、存储、计算，智能化数据分析等工作放在边缘处理，降低响应时延、减轻云端压力、降低带宽成本，并提供全网调度、 算力分发等云服务。
 原有边缘计算的核心优势在于： - 降低了原有的用户终端访问时延； - 缓解了中心计算/储存压力； - 降低了网络带宽使用，间接降低了使用成本；
白皮书中提到的边缘云的核心优势在于： - 算力的整合，边缘云计算能够最大程度上与传统云计算在架构、接口、管理等关键能力上实现统一，最终将边缘设备与云进行整合，成为云的一部分； - 算力的补偿，边缘云计算还可以通过分布在距离终端最近的基础设施，为终端侧数据源提供具有针对性的算力； - 软件栈，解决方案从中心云向边缘云的低成本迁移，降低开发成本的同时实现了系统稳定性，安全行的继承；
白皮书中提到边缘云计算的引入解决了如下客户痛点场景： &amp;gt; “目前很多公司和团队由于业务架构的需要，在全国各地的运营商 IDC 机房采购资源，自建多个边缘计算节点。这些公司和团队开展边缘计算的业务时共同的痛点是重资产、业务弹性、运维投入等。 当边缘节点有覆盖度要求时，以上问题将会成倍放大”
个人理解，本质的问题并没有解决，服务提供商（IT）仍旧需要租用运营商IDC机房的服务器来部署自己的虚拟化资源池，在当前应用场景下，IDC粒度的下沉级别可以大部分边缘计算应用场景的需求，然而随着5G引入的万物互联概念商用落地，对于时延，带宽，计算能力等指标的要求会更为严苛，使得边缘节点的进一步下沉（县，乡，村）成为可能的推进方向，运营商相较IT服务商有天生优势，通过改造或复用现有部署的基站，机房以达到更为细粒度的边缘覆盖，边缘（云）计算的基础设施一直掌握在运营商的手上，运营商需要转变的思路是在基础设施铺设好之后，如何实现上层的业务应用并据此盈利。
文中提到的边缘云计算在互动直播场景下的应用，基本思路在于算力下沉进行视频解码，缓解中心压力，提升上行质量。然而用户观看仍旧无法做到完全时间上的同步，异地的边缘节点数据的传输时间无法通过边缘节点的部署来进一步缩短，只是这个微小的时间偏移暂时不会造成用户上的体验下降。
文中提到的边缘云计算在智慧城市中的应用，基本思路在于降低监控视频流导致的带宽占用开销，一种办法是视频数据不传送回源站，实现本地处理本地保存，另一种办法是视频数据通过异步归档的方式（文中说的先汇聚后传输）传送至源站，通过视频的压缩，降码实现带宽的降低。
文中提到的边缘云计算标准化，参与的更多是类似像阿里这样实现上层业务应用的公司，个人理解应该对于上层业务的接口定义，场景定义应该尊重现有业务实现，IT公司的参与比较合适，对于下层基础设施的规范定义，物理规格定义应该由本身的基础设施建设者即运营商来定义。</description>
    </item>
    
  </channel>
</rss>